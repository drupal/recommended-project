on:
  workflow_dispatch:
    inputs:
      check_config:
        type: boolean
        description: 'Fail when configuration overridden'
        required: true
        default: true
      sql_backup:
        type: boolean
        description: 'Create SQL backup'
        required: true
        default: true

name: 'Deploy production instance'
jobs:
  deploy:
    name: 'deployment'
    runs-on: self-hosted
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: 'Install dependencies'
        uses: eaudeweb/drupal-install-action@1.x
        with:
          dev: false

      - name: 'Create release archive'
        id: artifact
        uses: eaudeweb/drupal-artifact-action@1.x

      - name: 'Deploy release on the server'
        uses: eaudeweb/drupal-deploy-action@v2.1.2
        with:
          ssh_user:             ${{ secrets.PROD_SSH_USER }}
          ssh_host:             ${{ secrets.PROD_SSH_HOST }}
          ssh_key:              ${{ secrets.PROD_SSH_KEY }}
          release_id:           'release-${{ github.ref_name }}'
          release_filename:     ${{ steps.artifact.outputs.filename }}
          project_dir:          /var/www/html/recommended-project
          artifacts_dir:        /var/www/artifacts/recommended-project
          settings_file:        /var/www/config/recommended-project/settings.local.php
          public_files_dir:     /var/www/config/recommended-project/files
          # robo_file:          /var/www/config/recommended-project/robo.yml
          # database_dump_dir:  /var/www/config/recommended-project/sync
          check_config:         ${{ inputs.check_config }}
          sql_backup:           ${{ inputs.sql_backup }}
          # artifacts_lifespan:   30

      - name: 'Update the Drupal instance'
        id: release
        uses: eaudeweb/drupal-update-action@v1
        with:
          path: /var/www/html/recommended-project

#      - name: 'Discord notification'
#        run: >
#          curl -X POST -F "content=${{ github.repository }} release **${{ github.ref_name }}** has been deployed on prod." ${{ secrets.DISCORD_WEBHOOK }}
#
#      - name: 'Discord notification on failed deploy'
#        if: failure()
#        run: >
#          curl -X POST -F
#          "content=ERROR: ${{ github.repository }} failed to deploy release **${{ github.ref_name }}** on prod.
#          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#          ${{ secrets.DISCORD_WEBHOOK }}
